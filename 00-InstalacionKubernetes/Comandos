#https://www.linuxtechi.com/install-kubernetes-on-ubuntu-22-04/
#usernames workers y master
$sudo apt install net-tools
$ifconfig
$sudo hostnamectl set-hostname "master.congresofoss.net"

#En los nodos aplicar 
$sudo hostnamectl set-hostname "worker1.congresofoss.net"
$sudo hostnamectl set-hostname "worker2.congresofoss.net"

$sudo vi /etc/hosts
192.168.122.19   master.congresofoss.net master
192.168.122.231   worker1.congresofoss.net worker1
192.168.184.232   worker2.congresofoss.net worker2

#Se quita el swap
$sudo swapoff -a
$sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab


#Se cargan modulos
$sudo tee /etc/modules-load.d/containerd.conf <<EOF
overlay
br_netfilter
EOF

$sudo modprobe overlay
$sudo modprobe br_netfilter


$sudo tee /etc/sysctl.d/kubernetes.conf <<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF


$sudo sysctl --system
#Se habilita certificado
$sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates
#Se habilita repositorio docker
$sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
$sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
$sudo apt upgrade
$sudo apt update
$sudo apt install -y containerd.io
$containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
$sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
$sudo systemctl restart containerd
$sudo systemctl enable containerd

#Se habilitan repositorios de kubernetes
$curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
$sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
$sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-jammy main"


#Se instala el kubernetes
$sudo apt update
$sudo apt install -y kubelet kubeadm kubectl
$sudo apt-mark hold kubelet kubeadm kubectl


#Se agrega un master node
$sudo kubeadm init --control-plane-endpoint=master.congresofoss.net

mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config



#salida para controles

  kubeadm join master.congresofoss.net:6443 --token 2n2d9v.jxxmmx7dlnxg5vc8 \
	--discovery-token-ca-cert-hash sha256:ede2bc3a421f6bc99bbc357131718a1ca4e985f38a57b17fff90f1abf2a51cd4 \
	--control-plane 


#Este es una salida que puede variar dependiendo de la salida
kubeadm join master.congresofoss.net:6443 --token 2n2d9v.jxxmmx7dlnxg5vc8 \
	--discovery-token-ca-cert-hash sha256:ede2bc3a421f6bc99bbc357131718a1ca4e985f38a57b17fff90f1abf2a51cd4 



#los nodes no estaran listos sino hasta que se instale calico
$kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml

